---
export interface Props {
	title: string;
}

const { title } = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<header>
			<nav id="navbar" class="rojo horizontal">
				<div id="logo">
					<a href="/">
						<img
							width="40px"
							src=" https://i.blogs.es/808765/dpoty-puppy-2nd--c--tracy-kirby-the-kennel-club-2/450_1000.jpg"
						/>
					</a>
				</div>
				<!--  esta es la hamburguesa -->
				<div id="burger">
				
					<button class="relative group">
						<div
							class="relative flex items-center justify-center rounded-full w-[50px] h-[50px] transform transition-all bg-slate-700 ring-0 ring-gray-300 hover:ring-8 group-focus:ring-4 ring-opacity-30 duration-200 shadow-md"
						>
							<div
								class="flex flex-col justify-between w-[20px] h-[20px] transform transition-all duration-300 group-focus:-rotate-[45deg] origin-center"
							>
								<div
									class="bg-white h-[2px] w-1/2 rounded transform transition-all duration-300 group-focus:-rotate-90 group-focus:h-[1px] origin-right delay-75 group-focus:-translate-y-[1px]"
								>
								</div>
								<div class="bg-white h-[1px] rounded"></div>
								<div
									class="bg-white h-[2px] w-1/2 rounded self-end transform transition-all duration-300 group-focus:-rotate-90 group-focus:h-[1px] origin-left delay-75 group-focus:translate-y-[1px]"
								>
								</div>
							</div>
						</div>
					</button>
				</div>

				<div id="menu">
					<ul id="navlinks">
						<li><a href="/aboutus">About Us</a></li>
						<li><a href="#">Contact</a></li>
						<li><a href="#">Merch</a></li>
						<li><a href="#">Other Pages</a></li>
					</ul>
				</div>
			</nav>
			<slot />
		</header>
	</body>
	<style>
		#menu {
			display: none;
			width: 100%; /* oculta el elemento */
		}
		#navbar {
			display: flex; /* coloca las cajas como si fueran celdas de tablas,
			 con un comportanmiento predecible y adaptable */
			flex-wrap: wrap;/*- son obligados a permanecer en una misma
			 linea o pueden fluir en varias lineas, pero wrap se refiere a varias lineas*/
			justify-content: space-between; /* define como el navegador distribuye el espacio entre y alrededor de los items flex*/
			margin: 20px;
		}
		body {
			background-image: url("/fondo.jpg");
			background-position: inherit;
		}
		@media (min-width: 768px) {
			#menu {
				display: flex;
			}
			#burger {
				display: none;
			}
			#navlinks {
				display: flex;
				gap: 20px;
			}
		}
	</style>
</html>

<script is:inline>
	// declaro una constante para el elemento con id burger
	const burger = document.getElementById("burger");

	function burgerclick() {
		const menu = document.getElementById("menu");
		// preguntamos si el elemento esta oculto
		if (menu.style.display === "none") {
			// si esta oculto lo muestro
			menu.style.display = "flex";
		} else {
			// si esta no oculto lo tengo que ocultar de vuelta
			menu.style.display = "none";
		}
	}
	// a√±adimos un escuhadpor al darle click a la burge se ejecuta la funcion 
	burger.addEventListener("click", burgerclick);
</script>
